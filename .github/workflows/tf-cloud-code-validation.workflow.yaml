name: tf cloud code validation

on:
  workflow_call:
    inputs:
      target-directory:
        description: "Target working directory"
        required: false
        type: string

    secrets:
      terraform_cloud_api_token:
        description: Terraform Cloud API token
        required: true
      infracost_api_token:
        description: Infracost API token
        required: false

jobs:
  tf-code-validation:
    name: Terraform code validation
    runs-on: ubuntu-latest
    env:
      INFRACOST_CURRENCY: EUR
      INFRACOSTS_API_KEY: ${{ secrets.infracost_api_token }}

    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.target-directory }}

    steps:
      # Checkout repository
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      # Retrieves the terraform CLI used in the GitHub action workflow
      - name: Setup Terraform
        id: tf-setup
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.terraform_cloud_api_token }}
          terraform_wrapper: false

      # Checks whether the repository has been properly formatted.
      # If it isn't properly formatted this step will produce an error.
      - name: Terraform Format
        id: tf-fmt
        run: terraform fmt -check

      # Initializes Terraform configurations.
      - name: Terraform Init
        id: tf-init
        run: terraform init

      # Validates Terraform configurations.
      - name: Terraform Validate
        id: tf-validate
        run: terraform validate -no-color

      # Generates a Terraform plan.
      - name: Terraform Plan
        id: tf-plan
        run: terraform plan -input=false -no-color

      # Generates a Infracost snapshot for the resources.
      - name: Setup Infracost
        if: ${{ env.INFRACOSTS_API_KEY!= '' }}
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ env.INFRACOSTS_API_KEY }}

      # Generates a Infracost json output for the resources.
      - name: Generate Infracost JSON
        if: ${{ env.INFRACOSTS_API_KEY!= '' }}
        run: infracost breakdown --path . --format json --out-file /tmp/infracost.json

      # Post comment on the PR with the infracost information.
      - name: Post Infracost comment
        if: ${{ env.INFRACOSTS_API_KEY!= '' }}
        run: |
          # Posts a comment to the PR using the 'update' behavior.
          # This creates a single comment and updates it. The "quietest" option.
          # The other valid behaviors are:
          #   delete-and-new - Delete previous comments and create a new one.
          #   hide-and-new - Minimize previous comments and create a new one.
          #   new - Create a new cost estimate comment on every push.
          infracost comment github --path /tmp/infracost.json \
                                   --repo $GITHUB_REPOSITORY \
                                   --github-token ${{github.token}} \
                                   --pull-request ${{github.event.pull_request.number}} \
                                   --behavior update